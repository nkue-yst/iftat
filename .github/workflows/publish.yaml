name: publish_release_assets
on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  setup:
    runs-on: ubuntu-latest
    # ブランチ名が release/v から始まる場合のみに実行する．
    # プルリクエストがマージされた場合のみに実行する．
    if: startsWith(github.head_ref, 'release/v') && github.event.pull_request.merged == true
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Git Tag name
        id: vars
        run: |
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF (${GITHUB_HEAD_REF##*/v})"
          echo "::set-output name=tag::${GITHUB_HEAD_REF##*/v}"
      - name: Initialize Git
        run: |
          git config --global user.name  "GitHub Actions"
          git config --global user.email "action@github.com"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.vars.outputs.tag }}
          release_name: Release v${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false

  publish:
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: iftat
            asset_name: iftat-${{ needs.setup.outputs.tag }}_linux_amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: iftat
            asset_name: iftat-${{ needs.setup.outputs.tag }}_linux_arm64
          - os: macOS-latest
            target: x86_64-apple-darwin
            artifact_name: iftat
            asset_name: iftat-${{ needs.setup.outputs.tag }}_darwin_amd64
          - os: macOS-latest
            target: aarch64-apple-darwin
            artifact_name: iftat
            asset_name: iftat-${{ needs.setup.outputs.tag }}_darwin_arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: iftat.exe
            asset_name: iftat-${{ needs.setup.outputs.tag }}_windows_amd64

    steps:
    # initialization
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Initialize Git
        shell: bash
        run: |
          git submodule update --init
      - name: Setup variable
        id: vars
        shell: bash
        run: |
          rustup target list
          DIR=$(echo "iftat-${{ needs.setup.outputs.tag }}")
          echo "::set-output name=dir::$DIR"
      - name: Cross build with all features
        uses: actions-rs/cargo@v1
        with:
          use-cross: true 
          command: build
          args: --release --target ${{ matrix.target }} --all-features --verbose

# publish release
      - name: Create release file
        run: |
          DIR=${{ steps.vars.outputs.dir }}
          DIST=${{ matrix.target }}
          mkdir -p dist/$DIST/$DIR
          cp -r site/public dist/$DIST/$DIR/docs
          cp -r README.md LICENSE target/completions target/${{ matrix.target }}/release/${{ matrix.artifact_name }} dist/$DIST/$DIR
          tar cvfz dist/${{ matrix.asset_name }}.tar.gz -C dist/$DIST $DIR
        shell: bash

      - name: Upload release assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: dist/${{ matrix.asset_name }}.tar.gz
          asset_name: ${{ matrix.asset_name }}.tar.gz
          asset_content_type: application/x-gzip
          upload_url: ${{ needs.setup.outputs.upload_url }}
